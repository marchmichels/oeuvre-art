# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    cache_adapter: cache.adapter.apcu
    locale: 'en'
    uploads_base_url: 'https://%env(AWS_S3_BUCKET_NAME)%.s3.us-east-2.amazonaws.com'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

        # setup special, global autowiring rules
        # setup special, global autowiring rules
        bind:
            $uploadsFilesystem: '@oneup_flysystem.uploads_filesystem_filesystem'
            $uploadedAssetsBaseUrl: '%uploads_base_url%'
            #: '%env(AWS_S3_BUCKET_NAME)%'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    Symfony\Component\Asset\Context\RequestStackContext: '@assets.context'


    Aws\S3\S3Client:
        arguments:
            -
                version: 'latest'
                region: 'us-east-2'
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'

    Aws\Lambda\LambdaClient:
            arguments:
            -
                version: 'latest'
                region: 'us-east-2'
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'